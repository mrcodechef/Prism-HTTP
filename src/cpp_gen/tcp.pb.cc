// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tcp.proto

#include <tcp.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace prism {
class TCPStateDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<TCPState> _instance;
} _TCPState_default_instance_;
} // namespace prism
namespace protobuf_tcp_2eproto {
static void
InitDefaultsTCPState()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_TCPState_default_instance_;
    new (ptr)::prism::TCPState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::TCPState::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TCPState = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsTCPState},
    {}};

void
InitDefaults()
{
  ::google::protobuf::internal::InitSCC(&scc_info_TCPState.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32
    TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState, seq_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState, ack_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       sendq_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       sendq_len_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       unsentq_len_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       recvq_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       recvq_len_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       self_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       self_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       peer_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       peer_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState, mss_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       send_wscale_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       recv_wscale_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       timestamp_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       snd_wl1_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       snd_wnd_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       max_window_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       rcv_wnd_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::TCPState,
                                                       rcv_wup_),
};
static const ::google::protobuf::internal::MigrationSchema
    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, sizeof(::prism::TCPState)},
};

static ::google::protobuf::Message const *const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_TCPState_default_instance_),
};

void
protobuf_AssignDescriptors()
{
  AddDescriptors();
  AssignDescriptors("tcp.proto", schemas, file_default_instances,
                    TableStruct::offsets, file_level_metadata, NULL, NULL);
}

void
protobuf_AssignDescriptorsOnce()
{
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void
protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void
protobuf_RegisterTypes(const ::std::string &)
{
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void
AddDescriptorsImpl()
{
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
      protodesc_cold) = {
      "\n\ttcp."
      "proto\022\005prism\"\353\002\n\010TCPState\022\013\n\003seq\030\001"
      " \001(\r\022\013\n\003ack\030\002 \001(\r\022\r\n\005sendq\030\003 "
      "\001(\014\022\021\n\tsend"
      "q_len\030\004 \001(\004\022\023\n\013unsentq_len\030\005 "
      "\001(\004\022\r\n\005recv"
      "q\030\006 \001(\014\022\021\n\trecvq_len\030\007 "
      "\001(\004\022\021\n\tself_addr\030"
      "\010 \001(\r\022\021\n\tself_port\030\t "
      "\001(\r\022\021\n\tpeer_addr\030\n "
      "\001(\r\022\021\n\tpeer_port\030\013 \001(\r\022\013\n\003mss\030\014 "
      "\001(\r\022\023\n\013s"
      "end_wscale\030\r \001(\r\022\023\n\013recv_wscale\030\016 "
      "\001(\r\022\021\n"
      "\ttimestamp\030\017 \001(\r\022\017\n\007snd_wl1\030\020 "
      "\001(\r\022\017\n\007snd"
      "_wnd\030\021 \001(\r\022\022\n\nmax_window\030\022 "
      "\001(\r\022\017\n\007rcv_wn"
      "d\030\023 \001(\r\022\017\n\007rcv_wup\030\024 \001(\rb\006proto3"};
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 392);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "tcp.proto", &protobuf_RegisterTypes);
}

void
AddDescriptors()
{
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
} // namespace protobuf_tcp_2eproto
namespace prism {

// ===================================================================

void
TCPState::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TCPState::kSeqFieldNumber;
const int TCPState::kAckFieldNumber;
const int TCPState::kSendqFieldNumber;
const int TCPState::kSendqLenFieldNumber;
const int TCPState::kUnsentqLenFieldNumber;
const int TCPState::kRecvqFieldNumber;
const int TCPState::kRecvqLenFieldNumber;
const int TCPState::kSelfAddrFieldNumber;
const int TCPState::kSelfPortFieldNumber;
const int TCPState::kPeerAddrFieldNumber;
const int TCPState::kPeerPortFieldNumber;
const int TCPState::kMssFieldNumber;
const int TCPState::kSendWscaleFieldNumber;
const int TCPState::kRecvWscaleFieldNumber;
const int TCPState::kTimestampFieldNumber;
const int TCPState::kSndWl1FieldNumber;
const int TCPState::kSndWndFieldNumber;
const int TCPState::kMaxWindowFieldNumber;
const int TCPState::kRcvWndFieldNumber;
const int TCPState::kRcvWupFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

TCPState::TCPState() : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_tcp_2eproto::scc_info_TCPState.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.TCPState)
}
TCPState::TCPState(const TCPState &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sendq_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendq().size() > 0) {
    sendq_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.sendq_);
  }
  recvq_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.recvq().size() > 0) {
    recvq_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.recvq_);
  }
  ::memcpy(&seq_, &from.seq_,
           static_cast<size_t>(reinterpret_cast<char *>(&rcv_wup_) -
                               reinterpret_cast<char *>(&seq_)) +
               sizeof(rcv_wup_));
  // @@protoc_insertion_point(copy_constructor:prism.TCPState)
}

void
TCPState::SharedCtor()
{
  sendq_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvq_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&rcv_wup_) -
                               reinterpret_cast<char *>(&seq_)) +
               sizeof(rcv_wup_));
}

TCPState::~TCPState()
{
  // @@protoc_insertion_point(destructor:prism.TCPState)
  SharedDtor();
}

void
TCPState::SharedDtor()
{
  sendq_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvq_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void
TCPState::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
TCPState::descriptor()
{
  ::protobuf_tcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const TCPState &
TCPState::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_tcp_2eproto::scc_info_TCPState.base);
  return *internal_default_instance();
}

void
TCPState::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.TCPState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  sendq_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recvq_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&seq_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&rcv_wup_) -
                               reinterpret_cast<char *>(&seq_)) +
               sizeof(rcv_wup_));
  _internal_metadata_.Clear();
}

bool
TCPState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.TCPState)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // uint32 seq = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &seq_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 ack = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &ack_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // bytes sendq = 3;
    case 3: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
        DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
            input, this->mutable_sendq()));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 sendq_len = 4;
    case 4: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &sendq_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 unsentq_len = 5;
    case 5: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &unsentq_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // bytes recvq = 6;
    case 6: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
        DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
            input, this->mutable_recvq()));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 recvq_len = 7;
    case 7: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &recvq_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 self_addr = 8;
    case 8: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &self_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 self_port = 9;
    case 9: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &self_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 peer_addr = 10;
    case 10: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 peer_port = 11;
    case 11: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 mss = 12;
    case 12: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &mss_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 send_wscale = 13;
    case 13: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &send_wscale_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 recv_wscale = 14;
    case 14: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &recv_wscale_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 timestamp = 15;
    case 15: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &timestamp_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 snd_wl1 = 16;
    case 16: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &snd_wl1_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 snd_wnd = 17;
    case 17: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &snd_wnd_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 max_window = 18;
    case 18: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &max_window_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 rcv_wnd = 19;
    case 19: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &rcv_wnd_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 rcv_wup = 20;
    case 20: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &rcv_wup_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.TCPState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.TCPState)
  return false;
#undef DO_
}

void
TCPState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.TCPState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 seq = 1;
  if (this->seq() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seq(),
                                                              output);
  }

  // uint32 ack = 2;
  if (this->ack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ack(),
                                                              output);
  }

  // bytes sendq = 3;
  if (this->sendq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        3, this->sendq(), output);
  }

  // uint64 sendq_len = 4;
  if (this->sendq_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        4, this->sendq_len(), output);
  }

  // uint64 unsentq_len = 5;
  if (this->unsentq_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        5, this->unsentq_len(), output);
  }

  // bytes recvq = 6;
  if (this->recvq().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        6, this->recvq(), output);
  }

  // uint64 recvq_len = 7;
  if (this->recvq_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        7, this->recvq_len(), output);
  }

  // uint32 self_addr = 8;
  if (this->self_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        8, this->self_addr(), output);
  }

  // uint32 self_port = 9;
  if (this->self_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        9, this->self_port(), output);
  }

  // uint32 peer_addr = 10;
  if (this->peer_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        10, this->peer_addr(), output);
  }

  // uint32 peer_port = 11;
  if (this->peer_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        11, this->peer_port(), output);
  }

  // uint32 mss = 12;
  if (this->mss() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->mss(),
                                                              output);
  }

  // uint32 send_wscale = 13;
  if (this->send_wscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        13, this->send_wscale(), output);
  }

  // uint32 recv_wscale = 14;
  if (this->recv_wscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        14, this->recv_wscale(), output);
  }

  // uint32 timestamp = 15;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        15, this->timestamp(), output);
  }

  // uint32 snd_wl1 = 16;
  if (this->snd_wl1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        16, this->snd_wl1(), output);
  }

  // uint32 snd_wnd = 17;
  if (this->snd_wnd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        17, this->snd_wnd(), output);
  }

  // uint32 max_window = 18;
  if (this->max_window() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        18, this->max_window(), output);
  }

  // uint32 rcv_wnd = 19;
  if (this->rcv_wnd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        19, this->rcv_wnd(), output);
  }

  // uint32 rcv_wup = 20;
  if (this->rcv_wup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        20, this->rcv_wup(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.TCPState)
}

::google::protobuf::uint8 *
TCPState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.TCPState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 seq = 1;
  if (this->seq() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->seq(), target);
  }

  // uint32 ack = 2;
  if (this->ack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        2, this->ack(), target);
  }

  // bytes sendq = 3;
  if (this->sendq().size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->sendq(), target);
  }

  // uint64 sendq_len = 4;
  if (this->sendq_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        4, this->sendq_len(), target);
  }

  // uint64 unsentq_len = 5;
  if (this->unsentq_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        5, this->unsentq_len(), target);
  }

  // bytes recvq = 6;
  if (this->recvq().size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->recvq(), target);
  }

  // uint64 recvq_len = 7;
  if (this->recvq_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        7, this->recvq_len(), target);
  }

  // uint32 self_addr = 8;
  if (this->self_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        8, this->self_addr(), target);
  }

  // uint32 self_port = 9;
  if (this->self_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        9, this->self_port(), target);
  }

  // uint32 peer_addr = 10;
  if (this->peer_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        10, this->peer_addr(), target);
  }

  // uint32 peer_port = 11;
  if (this->peer_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        11, this->peer_port(), target);
  }

  // uint32 mss = 12;
  if (this->mss() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        12, this->mss(), target);
  }

  // uint32 send_wscale = 13;
  if (this->send_wscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        13, this->send_wscale(), target);
  }

  // uint32 recv_wscale = 14;
  if (this->recv_wscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        14, this->recv_wscale(), target);
  }

  // uint32 timestamp = 15;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        15, this->timestamp(), target);
  }

  // uint32 snd_wl1 = 16;
  if (this->snd_wl1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        16, this->snd_wl1(), target);
  }

  // uint32 snd_wnd = 17;
  if (this->snd_wnd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        17, this->snd_wnd(), target);
  }

  // uint32 max_window = 18;
  if (this->max_window() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        18, this->max_window(), target);
  }

  // uint32 rcv_wnd = 19;
  if (this->rcv_wnd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        19, this->rcv_wnd(), target);
  }

  // uint32 rcv_wup = 20;
  if (this->rcv_wup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        20, this->rcv_wup(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.TCPState)
  return target;
}

size_t
TCPState::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.TCPState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // bytes sendq = 3;
  if (this->sendq().size() > 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                          this->sendq());
  }

  // bytes recvq = 6;
  if (this->recvq().size() > 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                          this->recvq());
  }

  // uint32 seq = 1;
  if (this->seq() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->seq());
  }

  // uint32 ack = 2;
  if (this->ack() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->ack());
  }

  // uint64 sendq_len = 4;
  if (this->sendq_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->sendq_len());
  }

  // uint64 unsentq_len = 5;
  if (this->unsentq_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->unsentq_len());
  }

  // uint64 recvq_len = 7;
  if (this->recvq_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->recvq_len());
  }

  // uint32 self_addr = 8;
  if (this->self_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->self_addr());
  }

  // uint32 self_port = 9;
  if (this->self_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->self_port());
  }

  // uint32 peer_addr = 10;
  if (this->peer_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_addr());
  }

  // uint32 peer_port = 11;
  if (this->peer_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_port());
  }

  // uint32 mss = 12;
  if (this->mss() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->mss());
  }

  // uint32 send_wscale = 13;
  if (this->send_wscale() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->send_wscale());
  }

  // uint32 recv_wscale = 14;
  if (this->recv_wscale() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->recv_wscale());
  }

  // uint32 timestamp = 15;
  if (this->timestamp() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->timestamp());
  }

  // uint32 snd_wl1 = 16;
  if (this->snd_wl1() != 0) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->snd_wl1());
  }

  // uint32 snd_wnd = 17;
  if (this->snd_wnd() != 0) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->snd_wnd());
  }

  // uint32 max_window = 18;
  if (this->max_window() != 0) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->max_window());
  }

  // uint32 rcv_wnd = 19;
  if (this->rcv_wnd() != 0) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->rcv_wnd());
  }

  // uint32 rcv_wup = 20;
  if (this->rcv_wup() != 0) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->rcv_wup());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
TCPState::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.TCPState)
  GOOGLE_DCHECK_NE(&from, this);
  const TCPState *source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TCPState>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.TCPState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.TCPState)
    MergeFrom(*source);
  }
}

void
TCPState::MergeFrom(const TCPState &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.TCPState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.sendq().size() > 0) {

    sendq_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.sendq_);
  }
  if (from.recvq().size() > 0) {

    recvq_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.recvq_);
  }
  if (from.seq() != 0) {
    set_seq(from.seq());
  }
  if (from.ack() != 0) {
    set_ack(from.ack());
  }
  if (from.sendq_len() != 0) {
    set_sendq_len(from.sendq_len());
  }
  if (from.unsentq_len() != 0) {
    set_unsentq_len(from.unsentq_len());
  }
  if (from.recvq_len() != 0) {
    set_recvq_len(from.recvq_len());
  }
  if (from.self_addr() != 0) {
    set_self_addr(from.self_addr());
  }
  if (from.self_port() != 0) {
    set_self_port(from.self_port());
  }
  if (from.peer_addr() != 0) {
    set_peer_addr(from.peer_addr());
  }
  if (from.peer_port() != 0) {
    set_peer_port(from.peer_port());
  }
  if (from.mss() != 0) {
    set_mss(from.mss());
  }
  if (from.send_wscale() != 0) {
    set_send_wscale(from.send_wscale());
  }
  if (from.recv_wscale() != 0) {
    set_recv_wscale(from.recv_wscale());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.snd_wl1() != 0) {
    set_snd_wl1(from.snd_wl1());
  }
  if (from.snd_wnd() != 0) {
    set_snd_wnd(from.snd_wnd());
  }
  if (from.max_window() != 0) {
    set_max_window(from.max_window());
  }
  if (from.rcv_wnd() != 0) {
    set_rcv_wnd(from.rcv_wnd());
  }
  if (from.rcv_wup() != 0) {
    set_rcv_wup(from.rcv_wup());
  }
}

void
TCPState::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.TCPState)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
TCPState::CopyFrom(const TCPState &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.TCPState)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
TCPState::IsInitialized() const
{
  return true;
}

void
TCPState::Swap(TCPState *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
TCPState::InternalSwap(TCPState *other)
{
  using std::swap;
  sendq_.Swap(&other->sendq_,
              &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
              GetArenaNoVirtual());
  recvq_.Swap(&other->recvq_,
              &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
              GetArenaNoVirtual());
  swap(seq_, other->seq_);
  swap(ack_, other->ack_);
  swap(sendq_len_, other->sendq_len_);
  swap(unsentq_len_, other->unsentq_len_);
  swap(recvq_len_, other->recvq_len_);
  swap(self_addr_, other->self_addr_);
  swap(self_port_, other->self_port_);
  swap(peer_addr_, other->peer_addr_);
  swap(peer_port_, other->peer_port_);
  swap(mss_, other->mss_);
  swap(send_wscale_, other->send_wscale_);
  swap(recv_wscale_, other->recv_wscale_);
  swap(timestamp_, other->timestamp_);
  swap(snd_wl1_, other->snd_wl1_);
  swap(snd_wnd_, other->snd_wnd_);
  swap(max_window_, other->max_window_);
  swap(rcv_wnd_, other->rcv_wnd_);
  swap(rcv_wup_, other->rcv_wup_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
TCPState::GetMetadata() const
{
  protobuf_tcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_tcp_2eproto::file_level_metadata[kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
} // namespace prism
namespace google {
namespace protobuf {
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::TCPState *
Arena::CreateMaybeMessage<::prism::TCPState>(Arena *arena)
{
  return Arena::CreateInternal<::prism::TCPState>(arena);
}
} // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)
