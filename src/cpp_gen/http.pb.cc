// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: http.proto

#include <http.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_http_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_http_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_HTTPHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_http_2eproto ::google::protobuf::
    internal::SCCInfo<1>
        scc_info_HTTPReq;
} // namespace protobuf_http_2eproto
namespace protobuf_tcp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tcp_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_TCPState;
} // namespace protobuf_tcp_2eproto
namespace protobuf_tls_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_tls_2eproto ::google::protobuf::
    internal::SCCInfo<0>
        scc_info_TLSState;
} // namespace protobuf_tls_2eproto
namespace prism {
class HTTPHeaderDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPHeader> _instance;
} _HTTPHeader_default_instance_;
class HTTPReqDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPReq> _instance;
} _HTTPReq_default_instance_;
class HTTPHandoffReqDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPHandoffReq> _instance;
} _HTTPHandoffReq_default_instance_;
class HTTPHandoffReplyDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPHandoffReply>
      _instance;
} _HTTPHandoffReply_default_instance_;
} // namespace prism
namespace protobuf_http_2eproto {
static void
InitDefaultsHTTPHeader()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_HTTPHeader_default_instance_;
    new (ptr)::prism::HTTPHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::HTTPHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HTTPHeader = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsHTTPHeader},
    {}};

static void
InitDefaultsHTTPReq()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_HTTPReq_default_instance_;
    new (ptr)::prism::HTTPReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::HTTPReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HTTPReq = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     1, InitDefaultsHTTPReq},
    {
        &protobuf_http_2eproto::scc_info_HTTPHeader.base,
    }};

static void
InitDefaultsHTTPHandoffReq()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_HTTPHandoffReq_default_instance_;
    new (ptr)::prism::HTTPHandoffReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::HTTPHandoffReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_HTTPHandoffReq = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     3, InitDefaultsHTTPHandoffReq},
    {
        &protobuf_tcp_2eproto::scc_info_TCPState.base,
        &protobuf_tls_2eproto::scc_info_TLSState.base,
        &protobuf_http_2eproto::scc_info_HTTPReq.base,
    }};

static void
InitDefaultsHTTPHandoffReply()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_HTTPHandoffReply_default_instance_;
    new (ptr)::prism::HTTPHandoffReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::HTTPHandoffReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HTTPHandoffReply = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsHTTPHandoffReply},
    {}};

void
InitDefaults()
{
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPHandoffReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPHandoffReply.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32
    TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHeader,
                                                       _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHeader,
                                                       name_ofs_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHeader,
                                                       name_len_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHeader,
                                                       val_ofs_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHeader,
                                                       val_len_),
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq, buf_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       minor_version_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       method_ofs_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       method_len_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       path_ofs_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       path_len_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       body_ofs_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       body_len_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       nheaders_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPReq,
                                                       headers_),
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHandoffReq,
                                                       _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHandoffReq,
                                                       tcp_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHandoffReq,
                                                       tls_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::prism::HTTPHandoffReq,
                                                       http_),
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::HTTPHandoffReply, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::HTTPHandoffReply, error_),
};
static const ::google::protobuf::internal::MigrationSchema
    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, sizeof(::prism::HTTPHeader)},
        {9, -1, sizeof(::prism::HTTPReq)},
        {24, -1, sizeof(::prism::HTTPHandoffReq)},
        {32, -1, sizeof(::prism::HTTPHandoffReply)},
};

static ::google::protobuf::Message const *const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_HTTPHeader_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_HTTPReq_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_HTTPHandoffReq_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_HTTPHandoffReply_default_instance_),
};

void
protobuf_AssignDescriptors()
{
  AddDescriptors();
  AssignDescriptors("http.proto", schemas, file_default_instances,
                    TableStruct::offsets, file_level_metadata, NULL, NULL);
}

void
protobuf_AssignDescriptorsOnce()
{
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void
protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void
protobuf_RegisterTypes(const ::std::string &)
{
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void
AddDescriptorsImpl()
{
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
      protodesc_cold) = {
      "\n\nhttp.proto\022\005prism\032\ttcp.proto\032\ttls.prot"
      "o\"R\n\nHTTPHeader\022\020\n\010name_ofs\030\001 "
      "\001(\004\022\020\n\010nam"
      "e_len\030\002 \001(\004\022\017\n\007val_ofs\030\003 "
      "\001(\004\022\017\n\007val_len\030"
      "\004 \001(\004\"\323\001\n\007HTTPReq\022\013\n\003buf\030\001 "
      "\001(\014\022\025\n\rminor_"
      "version\030\002 \001(\r\022\022\n\nmethod_ofs\030\003 "
      "\001(\004\022\022\n\nmet"
      "hod_len\030\004 \001(\004\022\020\n\010path_ofs\030\005 "
      "\001(\004\022\020\n\010path_"
      "len\030\006 \001(\004\022\020\n\010body_ofs\030\007 "
      "\001(\004\022\020\n\010body_len\030"
      "\010 \001(\004\022\020\n\010nheaders\030\t "
      "\001(\004\022\"\n\007headers\030\n \003(\013"
      "2\021.prism.HTTPHeader\"j\n\016HTTPHandoffReq\022\034\n"
      "\003tcp\030\001 \001(\0132\017.prism.TCPState\022\034\n\003tls\030\002 "
      "\001(\013"
      "2\017.prism.TLSState\022\034\n\004http\030\003 \001(\0132\016.prism."
      "HTTPReq\"!\n\020HTTPHandoffReply\022\r\n\005error\030\001 \001"
      "(\005b\006proto3"};
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 490);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "http.proto", &protobuf_RegisterTypes);
  ::protobuf_tcp_2eproto::AddDescriptors();
  ::protobuf_tls_2eproto::AddDescriptors();
}

void
AddDescriptors()
{
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
} // namespace protobuf_http_2eproto
namespace prism {

// ===================================================================

void
HTTPHeader::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPHeader::kNameOfsFieldNumber;
const int HTTPHeader::kNameLenFieldNumber;
const int HTTPHeader::kValOfsFieldNumber;
const int HTTPHeader::kValLenFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPHeader::HTTPHeader()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.HTTPHeader)
}
HTTPHeader::HTTPHeader(const HTTPHeader &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&name_ofs_, &from.name_ofs_,
           static_cast<size_t>(reinterpret_cast<char *>(&val_len_) -
                               reinterpret_cast<char *>(&name_ofs_)) +
               sizeof(val_len_));
  // @@protoc_insertion_point(copy_constructor:prism.HTTPHeader)
}

void
HTTPHeader::SharedCtor()
{
  ::memset(&name_ofs_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&val_len_) -
                               reinterpret_cast<char *>(&name_ofs_)) +
               sizeof(val_len_));
}

HTTPHeader::~HTTPHeader()
{
  // @@protoc_insertion_point(destructor:prism.HTTPHeader)
  SharedDtor();
}

void
HTTPHeader::SharedDtor()
{
}

void
HTTPHeader::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
HTTPHeader::descriptor()
{
  ::protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const HTTPHeader &
HTTPHeader::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPHeader.base);
  return *internal_default_instance();
}

void
HTTPHeader::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.HTTPHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&name_ofs_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&val_len_) -
                               reinterpret_cast<char *>(&name_ofs_)) +
               sizeof(val_len_));
  _internal_metadata_.Clear();
}

bool
HTTPHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.HTTPHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // uint64 name_ofs = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &name_ofs_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 name_len = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &name_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 val_ofs = 3;
    case 3: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &val_ofs_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 val_len = 4;
    case 4: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &val_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.HTTPHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.HTTPHeader)
  return false;
#undef DO_
}

void
HTTPHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.HTTPHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 name_ofs = 1;
  if (this->name_ofs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        1, this->name_ofs(), output);
  }

  // uint64 name_len = 2;
  if (this->name_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        2, this->name_len(), output);
  }

  // uint64 val_ofs = 3;
  if (this->val_ofs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        3, this->val_ofs(), output);
  }

  // uint64 val_len = 4;
  if (this->val_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        4, this->val_len(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.HTTPHeader)
}

::google::protobuf::uint8 *
HTTPHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.HTTPHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint64 name_ofs = 1;
  if (this->name_ofs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        1, this->name_ofs(), target);
  }

  // uint64 name_len = 2;
  if (this->name_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        2, this->name_len(), target);
  }

  // uint64 val_ofs = 3;
  if (this->val_ofs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        3, this->val_ofs(), target);
  }

  // uint64 val_len = 4;
  if (this->val_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        4, this->val_len(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.HTTPHeader)
  return target;
}

size_t
HTTPHeader::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.HTTPHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // uint64 name_ofs = 1;
  if (this->name_ofs() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->name_ofs());
  }

  // uint64 name_len = 2;
  if (this->name_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->name_len());
  }

  // uint64 val_ofs = 3;
  if (this->val_ofs() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->val_ofs());
  }

  // uint64 val_len = 4;
  if (this->val_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->val_len());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
HTTPHeader::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.HTTPHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPHeader *source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPHeader>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.HTTPHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.HTTPHeader)
    MergeFrom(*source);
  }
}

void
HTTPHeader::MergeFrom(const HTTPHeader &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.HTTPHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.name_ofs() != 0) {
    set_name_ofs(from.name_ofs());
  }
  if (from.name_len() != 0) {
    set_name_len(from.name_len());
  }
  if (from.val_ofs() != 0) {
    set_val_ofs(from.val_ofs());
  }
  if (from.val_len() != 0) {
    set_val_len(from.val_len());
  }
}

void
HTTPHeader::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.HTTPHeader)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
HTTPHeader::CopyFrom(const HTTPHeader &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.HTTPHeader)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
HTTPHeader::IsInitialized() const
{
  return true;
}

void
HTTPHeader::Swap(HTTPHeader *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
HTTPHeader::InternalSwap(HTTPHeader *other)
{
  using std::swap;
  swap(name_ofs_, other->name_ofs_);
  swap(name_len_, other->name_len_);
  swap(val_ofs_, other->val_ofs_);
  swap(val_len_, other->val_len_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
HTTPHeader::GetMetadata() const
{
  protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void
HTTPReq::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPReq::kBufFieldNumber;
const int HTTPReq::kMinorVersionFieldNumber;
const int HTTPReq::kMethodOfsFieldNumber;
const int HTTPReq::kMethodLenFieldNumber;
const int HTTPReq::kPathOfsFieldNumber;
const int HTTPReq::kPathLenFieldNumber;
const int HTTPReq::kBodyOfsFieldNumber;
const int HTTPReq::kBodyLenFieldNumber;
const int HTTPReq::kNheadersFieldNumber;
const int HTTPReq::kHeadersFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPReq::HTTPReq() : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.HTTPReq)
}
HTTPReq::HTTPReq(const HTTPReq &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL),
      headers_(from.headers_)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  buf_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.buf().size() > 0) {
    buf_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.buf_);
  }
  ::memcpy(&method_ofs_, &from.method_ofs_,
           static_cast<size_t>(reinterpret_cast<char *>(&minor_version_) -
                               reinterpret_cast<char *>(&method_ofs_)) +
               sizeof(minor_version_));
  // @@protoc_insertion_point(copy_constructor:prism.HTTPReq)
}

void
HTTPReq::SharedCtor()
{
  buf_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&method_ofs_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&minor_version_) -
                               reinterpret_cast<char *>(&method_ofs_)) +
               sizeof(minor_version_));
}

HTTPReq::~HTTPReq()
{
  // @@protoc_insertion_point(destructor:prism.HTTPReq)
  SharedDtor();
}

void
HTTPReq::SharedDtor()
{
  buf_.DestroyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void
HTTPReq::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
HTTPReq::descriptor()
{
  ::protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const HTTPReq &
HTTPReq::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPReq.base);
  return *internal_default_instance();
}

void
HTTPReq::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.HTTPReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  headers_.Clear();
  buf_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&method_ofs_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&minor_version_) -
                               reinterpret_cast<char *>(&method_ofs_)) +
               sizeof(minor_version_));
  _internal_metadata_.Clear();
}

bool
HTTPReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.HTTPReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // bytes buf = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
        DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
            input, this->mutable_buf()));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 minor_version = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &minor_version_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 method_ofs = 3;
    case 3: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &method_ofs_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 method_len = 4;
    case 4: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &method_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 path_ofs = 5;
    case 5: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &path_ofs_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 path_len = 6;
    case 6: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &path_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 body_ofs = 7;
    case 7: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &body_ofs_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 body_len = 8;
    case 8: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &body_len_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 nheaders = 9;
    case 9: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &nheaders_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // repeated .prism.HTTPHeader headers = 10;
    case 10: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
            input, add_headers()));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.HTTPReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.HTTPReq)
  return false;
#undef DO_
}

void
HTTPReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.HTTPReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes buf = 1;
  if (this->buf().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
        1, this->buf(), output);
  }

  // uint32 minor_version = 2;
  if (this->minor_version() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        2, this->minor_version(), output);
  }

  // uint64 method_ofs = 3;
  if (this->method_ofs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        3, this->method_ofs(), output);
  }

  // uint64 method_len = 4;
  if (this->method_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        4, this->method_len(), output);
  }

  // uint64 path_ofs = 5;
  if (this->path_ofs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        5, this->path_ofs(), output);
  }

  // uint64 path_len = 6;
  if (this->path_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        6, this->path_len(), output);
  }

  // uint64 body_ofs = 7;
  if (this->body_ofs() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        7, this->body_ofs(), output);
  }

  // uint64 body_len = 8;
  if (this->body_len() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        8, this->body_len(), output);
  }

  // uint64 nheaders = 9;
  if (this->nheaders() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        9, this->nheaders(), output);
  }

  // repeated .prism.HTTPHeader headers = 10;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->headers_size());
       i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        10, this->headers(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.HTTPReq)
}

::google::protobuf::uint8 *
HTTPReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.HTTPReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes buf = 1;
  if (this->buf().size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->buf(), target);
  }

  // uint32 minor_version = 2;
  if (this->minor_version() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        2, this->minor_version(), target);
  }

  // uint64 method_ofs = 3;
  if (this->method_ofs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        3, this->method_ofs(), target);
  }

  // uint64 method_len = 4;
  if (this->method_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        4, this->method_len(), target);
  }

  // uint64 path_ofs = 5;
  if (this->path_ofs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        5, this->path_ofs(), target);
  }

  // uint64 path_len = 6;
  if (this->path_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        6, this->path_len(), target);
  }

  // uint64 body_ofs = 7;
  if (this->body_ofs() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        7, this->body_ofs(), target);
  }

  // uint64 body_len = 8;
  if (this->body_len() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        8, this->body_len(), target);
  }

  // uint64 nheaders = 9;
  if (this->nheaders() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        9, this->nheaders(), target);
  }

  // repeated .prism.HTTPHeader headers = 10;
  for (unsigned int i = 0, n = static_cast<unsigned int>(this->headers_size());
       i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(10, this->headers(static_cast<int>(i)),
                                    deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.HTTPReq)
  return target;
}

size_t
HTTPReq::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.HTTPReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // repeated .prism.HTTPHeader headers = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->headers(static_cast<int>(i)));
    }
  }

  // bytes buf = 1;
  if (this->buf().size() > 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                          this->buf());
  }

  // uint64 method_ofs = 3;
  if (this->method_ofs() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->method_ofs());
  }

  // uint64 method_len = 4;
  if (this->method_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->method_len());
  }

  // uint64 path_ofs = 5;
  if (this->path_ofs() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->path_ofs());
  }

  // uint64 path_len = 6;
  if (this->path_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->path_len());
  }

  // uint64 body_ofs = 7;
  if (this->body_ofs() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->body_ofs());
  }

  // uint64 body_len = 8;
  if (this->body_len() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->body_len());
  }

  // uint64 nheaders = 9;
  if (this->nheaders() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->nheaders());
  }

  // uint32 minor_version = 2;
  if (this->minor_version() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->minor_version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
HTTPReq::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.HTTPReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPReq *source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPReq>(
          &from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.HTTPReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.HTTPReq)
    MergeFrom(*source);
  }
}

void
HTTPReq::MergeFrom(const HTTPReq &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.HTTPReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  headers_.MergeFrom(from.headers_);
  if (from.buf().size() > 0) {

    buf_.AssignWithDefault(
        &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from.buf_);
  }
  if (from.method_ofs() != 0) {
    set_method_ofs(from.method_ofs());
  }
  if (from.method_len() != 0) {
    set_method_len(from.method_len());
  }
  if (from.path_ofs() != 0) {
    set_path_ofs(from.path_ofs());
  }
  if (from.path_len() != 0) {
    set_path_len(from.path_len());
  }
  if (from.body_ofs() != 0) {
    set_body_ofs(from.body_ofs());
  }
  if (from.body_len() != 0) {
    set_body_len(from.body_len());
  }
  if (from.nheaders() != 0) {
    set_nheaders(from.nheaders());
  }
  if (from.minor_version() != 0) {
    set_minor_version(from.minor_version());
  }
}

void
HTTPReq::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.HTTPReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
HTTPReq::CopyFrom(const HTTPReq &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.HTTPReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
HTTPReq::IsInitialized() const
{
  return true;
}

void
HTTPReq::Swap(HTTPReq *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
HTTPReq::InternalSwap(HTTPReq *other)
{
  using std::swap;
  CastToBase(&headers_)->InternalSwap(CastToBase(&other->headers_));
  buf_.Swap(&other->buf_,
            &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
            GetArenaNoVirtual());
  swap(method_ofs_, other->method_ofs_);
  swap(method_len_, other->method_len_);
  swap(path_ofs_, other->path_ofs_);
  swap(path_len_, other->path_len_);
  swap(body_ofs_, other->body_ofs_);
  swap(body_len_, other->body_len_);
  swap(nheaders_, other->nheaders_);
  swap(minor_version_, other->minor_version_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
HTTPReq::GetMetadata() const
{
  protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void
HTTPHandoffReq::InitAsDefaultInstance()
{
  ::prism::_HTTPHandoffReq_default_instance_._instance.get_mutable()->tcp_ =
      const_cast<::prism::TCPState *>(
          ::prism::TCPState::internal_default_instance());
  ::prism::_HTTPHandoffReq_default_instance_._instance.get_mutable()->tls_ =
      const_cast<::prism::TLSState *>(
          ::prism::TLSState::internal_default_instance());
  ::prism::_HTTPHandoffReq_default_instance_._instance.get_mutable()->http_ =
      const_cast<::prism::HTTPReq *>(
          ::prism::HTTPReq::internal_default_instance());
}
void
HTTPHandoffReq::clear_tcp()
{
  if (GetArenaNoVirtual() == NULL && tcp_ != NULL) {
    delete tcp_;
  }
  tcp_ = NULL;
}
void
HTTPHandoffReq::clear_tls()
{
  if (GetArenaNoVirtual() == NULL && tls_ != NULL) {
    delete tls_;
  }
  tls_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPHandoffReq::kTcpFieldNumber;
const int HTTPHandoffReq::kTlsFieldNumber;
const int HTTPHandoffReq::kHttpFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPHandoffReq::HTTPHandoffReq()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPHandoffReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.HTTPHandoffReq)
}
HTTPHandoffReq::HTTPHandoffReq(const HTTPHandoffReq &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tcp()) {
    tcp_ = new ::prism::TCPState(*from.tcp_);
  } else {
    tcp_ = NULL;
  }
  if (from.has_tls()) {
    tls_ = new ::prism::TLSState(*from.tls_);
  } else {
    tls_ = NULL;
  }
  if (from.has_http()) {
    http_ = new ::prism::HTTPReq(*from.http_);
  } else {
    http_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:prism.HTTPHandoffReq)
}

void
HTTPHandoffReq::SharedCtor()
{
  ::memset(&tcp_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&http_) -
                               reinterpret_cast<char *>(&tcp_)) +
               sizeof(http_));
}

HTTPHandoffReq::~HTTPHandoffReq()
{
  // @@protoc_insertion_point(destructor:prism.HTTPHandoffReq)
  SharedDtor();
}

void
HTTPHandoffReq::SharedDtor()
{
  if (this != internal_default_instance())
    delete tcp_;
  if (this != internal_default_instance())
    delete tls_;
  if (this != internal_default_instance())
    delete http_;
}

void
HTTPHandoffReq::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
HTTPHandoffReq::descriptor()
{
  ::protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const HTTPHandoffReq &
HTTPHandoffReq::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPHandoffReq.base);
  return *internal_default_instance();
}

void
HTTPHandoffReq::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.HTTPHandoffReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tcp_ != NULL) {
    delete tcp_;
  }
  tcp_ = NULL;
  if (GetArenaNoVirtual() == NULL && tls_ != NULL) {
    delete tls_;
  }
  tls_ = NULL;
  if (GetArenaNoVirtual() == NULL && http_ != NULL) {
    delete http_;
  }
  http_ = NULL;
  _internal_metadata_.Clear();
}

bool
HTTPHandoffReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.HTTPHandoffReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // .prism.TCPState tcp = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
            input, mutable_tcp()));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // .prism.TLSState tls = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
            input, mutable_tls()));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // .prism.HTTPReq http = 3;
    case 3: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
        DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
            input, mutable_http()));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.HTTPHandoffReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.HTTPHandoffReq)
  return false;
#undef DO_
}

void
HTTPHandoffReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.HTTPHandoffReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .prism.TCPState tcp = 1;
  if (this->has_tcp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, this->_internal_tcp(), output);
  }

  // .prism.TLSState tls = 2;
  if (this->has_tls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, this->_internal_tls(), output);
  }

  // .prism.HTTPReq http = 3;
  if (this->has_http()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, this->_internal_http(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.HTTPHandoffReq)
}

::google::protobuf::uint8 *
HTTPHandoffReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.HTTPHandoffReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // .prism.TCPState tcp = 1;
  if (this->has_tcp()) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(1, this->_internal_tcp(), deterministic,
                                    target);
  }

  // .prism.TLSState tls = 2;
  if (this->has_tls()) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(2, this->_internal_tls(), deterministic,
                                    target);
  }

  // .prism.HTTPReq http = 3;
  if (this->has_http()) {
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageToArray(3, this->_internal_http(), deterministic,
                                    target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.HTTPHandoffReq)
  return target;
}

size_t
HTTPHandoffReq::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.HTTPHandoffReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // .prism.TCPState tcp = 1;
  if (this->has_tcp()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*tcp_);
  }

  // .prism.TLSState tls = 2;
  if (this->has_tls()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*tls_);
  }

  // .prism.HTTPReq http = 3;
  if (this->has_http()) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*http_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
HTTPHandoffReq::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.HTTPHandoffReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPHandoffReq *source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const HTTPHandoffReq>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.HTTPHandoffReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.HTTPHandoffReq)
    MergeFrom(*source);
  }
}

void
HTTPHandoffReq::MergeFrom(const HTTPHandoffReq &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.HTTPHandoffReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.has_tcp()) {
    mutable_tcp()->::prism::TCPState::MergeFrom(from.tcp());
  }
  if (from.has_tls()) {
    mutable_tls()->::prism::TLSState::MergeFrom(from.tls());
  }
  if (from.has_http()) {
    mutable_http()->::prism::HTTPReq::MergeFrom(from.http());
  }
}

void
HTTPHandoffReq::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.HTTPHandoffReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
HTTPHandoffReq::CopyFrom(const HTTPHandoffReq &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.HTTPHandoffReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
HTTPHandoffReq::IsInitialized() const
{
  return true;
}

void
HTTPHandoffReq::Swap(HTTPHandoffReq *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
HTTPHandoffReq::InternalSwap(HTTPHandoffReq *other)
{
  using std::swap;
  swap(tcp_, other->tcp_);
  swap(tls_, other->tls_);
  swap(http_, other->http_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
HTTPHandoffReq::GetMetadata() const
{
  protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages];
}

// ===================================================================

void
HTTPHandoffReply::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPHandoffReply::kErrorFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPHandoffReply::HTTPHandoffReply()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPHandoffReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.HTTPHandoffReply)
}
HTTPHandoffReply::HTTPHandoffReply(const HTTPHandoffReply &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:prism.HTTPHandoffReply)
}

void
HTTPHandoffReply::SharedCtor()
{
  error_ = 0;
}

HTTPHandoffReply::~HTTPHandoffReply()
{
  // @@protoc_insertion_point(destructor:prism.HTTPHandoffReply)
  SharedDtor();
}

void
HTTPHandoffReply::SharedDtor()
{
}

void
HTTPHandoffReply::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
HTTPHandoffReply::descriptor()
{
  ::protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages]
      .descriptor;
}

const HTTPHandoffReply &
HTTPHandoffReply::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_http_2eproto::scc_info_HTTPHandoffReply.base);
  return *internal_default_instance();
}

void
HTTPHandoffReply::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.HTTPHandoffReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  error_ = 0;
  _internal_metadata_.Clear();
}

bool
HTTPHandoffReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.HTTPHandoffReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // int32 error = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::int32,
             ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
            input, &error_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.HTTPHandoffReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.HTTPHandoffReply)
  return false;
#undef DO_
}

void
HTTPHandoffReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.HTTPHandoffReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->error(),
                                                             output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.HTTPHandoffReply)
}

::google::protobuf::uint8 *
HTTPHandoffReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.HTTPHandoffReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(
        1, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.HTTPHandoffReply)
  return target;
}

size_t
HTTPHandoffReply::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.HTTPHandoffReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // int32 error = 1;
  if (this->error() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                          this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
HTTPHandoffReply::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.HTTPHandoffReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPHandoffReply *source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const HTTPHandoffReply>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.HTTPHandoffReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.HTTPHandoffReply)
    MergeFrom(*source);
  }
}

void
HTTPHandoffReply::MergeFrom(const HTTPHandoffReply &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.HTTPHandoffReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
}

void
HTTPHandoffReply::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.HTTPHandoffReply)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
HTTPHandoffReply::CopyFrom(const HTTPHandoffReply &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.HTTPHandoffReply)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
HTTPHandoffReply::IsInitialized() const
{
  return true;
}

void
HTTPHandoffReply::Swap(HTTPHandoffReply *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
HTTPHandoffReply::InternalSwap(HTTPHandoffReply *other)
{
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
HTTPHandoffReply::GetMetadata() const
{
  protobuf_http_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_http_2eproto::file_level_metadata[kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
} // namespace prism
namespace google {
namespace protobuf {
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::HTTPHeader *
Arena::CreateMaybeMessage<::prism::HTTPHeader>(Arena *arena)
{
  return Arena::CreateInternal<::prism::HTTPHeader>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::HTTPReq *
Arena::CreateMaybeMessage<::prism::HTTPReq>(Arena *arena)
{
  return Arena::CreateInternal<::prism::HTTPReq>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::HTTPHandoffReq *
Arena::CreateMaybeMessage<::prism::HTTPHandoffReq>(Arena *arena)
{
  return Arena::CreateInternal<::prism::HTTPHandoffReq>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::HTTPHandoffReply *
Arena::CreateMaybeMessage<::prism::HTTPHandoffReply>(Arena *arena)
{
  return Arena::CreateInternal<::prism::HTTPHandoffReply>(arena);
}
} // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)
