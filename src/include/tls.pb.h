// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tls.proto

#ifndef PROTOBUF_INCLUDED_tls_2eproto
#define PROTOBUF_INCLUDED_tls_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h> // IWYU pragma: export
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/message.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h> // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_tls_2eproto

namespace protobuf_tls_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable
      serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
} // namespace protobuf_tls_2eproto
namespace prism {
class TLSState;
class TLSStateDefaultTypeInternal;
extern TLSStateDefaultTypeInternal _TLSState_default_instance_;
} // namespace prism
namespace google {
namespace protobuf {
template <>
::prism::TLSState *Arena::CreateMaybeMessage<::prism::TLSState>(Arena *);
} // namespace protobuf
} // namespace google
namespace prism {

// ===================================================================

class TLSState
    : public ::google::protobuf::
          Message /* @@protoc_insertion_point(class_definition:prism.TLSState)
                   */
{
public:
  TLSState();
  virtual ~TLSState();

  TLSState(const TLSState &from);

  inline TLSState &
  operator=(const TLSState &from)
  {
    CopyFrom(from);
    return *this;
  }
#if LANG_CXX11
  TLSState(TLSState &&from) noexcept : TLSState() { *this = ::std::move(from); }

  inline TLSState &
  operator=(TLSState &&from) noexcept
  {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from)
        InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
#endif
  static const ::google::protobuf::Descriptor *descriptor();
  static const TLSState &default_instance();

  static void InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
  static inline const TLSState *
  internal_default_instance()
  {
    return reinterpret_cast<const TLSState *>(&_TLSState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;

  void Swap(TLSState *other);
  friend void
  swap(TLSState &a, TLSState &b)
  {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TLSState *
  New() const final
  {
    return CreateMaybeMessage<TLSState>(NULL);
  }

  TLSState *
  New(::google::protobuf::Arena *arena) const final
  {
    return CreateMaybeMessage<TLSState>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message &from) final;
  void MergeFrom(const ::google::protobuf::Message &from) final;
  void CopyFrom(const TLSState &from);
  void MergeFrom(const TLSState &from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream *input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream *output) const final;
  ::google::protobuf::uint8 *InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8 *target) const final;
  int
  GetCachedSize() const final
  {
    return _cached_size_.Get();
  }

private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TLSState *other);

private:
  inline ::google::protobuf::Arena *
  GetArenaNoVirtual() const
  {
    return NULL;
  }
  inline void *
  MaybeArenaPtr() const
  {
    return NULL;
  }

public:
  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes buf = 1;
  void clear_buf();
  static const int kBufFieldNumber = 1;
  const ::std::string &buf() const;
  void set_buf(const ::std::string &value);
#if LANG_CXX11
  void set_buf(::std::string &&value);
#endif
  void set_buf(const char *value);
  void set_buf(const void *value, size_t size);
  ::std::string *mutable_buf();
  ::std::string *release_buf();
  void set_allocated_buf(::std::string *buf);

  // @@protoc_insertion_point(class_scope:prism.TLSState)
private:
  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr buf_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_tls_2eproto::TableStruct;
};
// ===================================================================

// ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
// TLSState

// bytes buf = 1;
inline void
TLSState::clear_buf()
{
  buf_.ClearToEmptyNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string &
TLSState::buf() const
{
  // @@protoc_insertion_point(field_get:prism.TLSState.buf)
  return buf_.GetNoArena();
}
inline void
TLSState::set_buf(const ::std::string &value)
{
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  value);
  // @@protoc_insertion_point(field_set:prism.TLSState.buf)
}
#if LANG_CXX11
inline void
TLSState::set_buf(::std::string &&value)
{
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:prism.TLSState.buf)
}
#endif
inline void
TLSState::set_buf(const char *value)
{
  GOOGLE_DCHECK(value != NULL);

  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::string(value));
  // @@protoc_insertion_point(field_set_char:prism.TLSState.buf)
}
inline void
TLSState::set_buf(const void *value, size_t size)
{
  buf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                  ::std::string(reinterpret_cast<const char *>(value), size));
  // @@protoc_insertion_point(field_set_pointer:prism.TLSState.buf)
}
inline ::std::string *
TLSState::mutable_buf()
{
  // @@protoc_insertion_point(field_mutable:prism.TLSState.buf)
  return buf_.MutableNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string *
TLSState::release_buf()
{
  // @@protoc_insertion_point(field_release:prism.TLSState.buf)

  return buf_.ReleaseNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void
TLSState::set_allocated_buf(::std::string *buf)
{
  if (buf != NULL) {
  } else {
  }
  buf_.SetAllocatedNoArena(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited(), buf);
  // @@protoc_insertion_point(field_set_allocated:prism.TLSState.buf)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__

// @@protoc_insertion_point(namespace_scope)

} // namespace prism

// @@protoc_insertion_point(global_scope)

#endif // PROTOBUF_INCLUDED_tls_2eproto
