// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: prism_switch.proto

#include "prism_switch.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace prism {
class PrismSwitchAddReqDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrismSwitchAddReq>
      _instance;
} _PrismSwitchAddReq_default_instance_;
class PrismSwitchChangeOwnerReqDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrismSwitchChangeOwnerReq>
      _instance;
} _PrismSwitchChangeOwnerReq_default_instance_;
class PrismSwitchDeleteReqDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrismSwitchDeleteReq>
      _instance;
} _PrismSwitchDeleteReq_default_instance_;
class PrismSwitchLockReqDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrismSwitchLockReq>
      _instance;
} _PrismSwitchLockReq_default_instance_;
class PrismSwitchReplyDefaultTypeInternal {
public:
  ::google::protobuf::internal::ExplicitlyConstructed<PrismSwitchReply>
      _instance;
} _PrismSwitchReply_default_instance_;
} // namespace prism
namespace protobuf_prism_5fswitch_2eproto {
static void
InitDefaultsPrismSwitchAddReq()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_PrismSwitchAddReq_default_instance_;
    new (ptr)::prism::PrismSwitchAddReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::PrismSwitchAddReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrismSwitchAddReq = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsPrismSwitchAddReq},
    {}};

static void
InitDefaultsPrismSwitchChangeOwnerReq()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_PrismSwitchChangeOwnerReq_default_instance_;
    new (ptr)::prism::PrismSwitchChangeOwnerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::PrismSwitchChangeOwnerReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrismSwitchChangeOwnerReq = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsPrismSwitchChangeOwnerReq},
    {}};

static void
InitDefaultsPrismSwitchDeleteReq()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_PrismSwitchDeleteReq_default_instance_;
    new (ptr)::prism::PrismSwitchDeleteReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::PrismSwitchDeleteReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrismSwitchDeleteReq = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsPrismSwitchDeleteReq},
    {}};

static void
InitDefaultsPrismSwitchLockReq()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_PrismSwitchLockReq_default_instance_;
    new (ptr)::prism::PrismSwitchLockReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::PrismSwitchLockReq::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrismSwitchLockReq = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsPrismSwitchLockReq},
    {}};

static void
InitDefaultsPrismSwitchReply()
{
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void *ptr = &::prism::_PrismSwitchReply_default_instance_;
    new (ptr)::prism::PrismSwitchReply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::prism::PrismSwitchReply::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PrismSwitchReply = {
    {ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized),
     0, InitDefaultsPrismSwitchReply},
    {}};

void
InitDefaults()
{
  ::google::protobuf::internal::InitSCC(&scc_info_PrismSwitchAddReq.base);
  ::google::protobuf::internal::InitSCC(
      &scc_info_PrismSwitchChangeOwnerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrismSwitchDeleteReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrismSwitchLockReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PrismSwitchReply.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32
    TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, peer_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, peer_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, virtual_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, virtual_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, owner_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, owner_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, owner_mac_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchAddReq, lock_),
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchChangeOwnerReq, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchChangeOwnerReq, peer_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchChangeOwnerReq, peer_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchChangeOwnerReq, owner_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchChangeOwnerReq, owner_port_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchChangeOwnerReq, owner_mac_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchChangeOwnerReq, unlock_),
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchDeleteReq, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchDeleteReq, peer_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchDeleteReq, peer_port_),
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchLockReq, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchLockReq, peer_addr_),
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchLockReq, peer_port_),
        ~0u, // no _has_bits_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchReply, _internal_metadata_),
        ~0u, // no _extensions_
        ~0u, // no _oneof_case_
        ~0u, // no _weak_field_map_
        GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(
            ::prism::PrismSwitchReply, error_),
};
static const ::google::protobuf::internal::MigrationSchema
    schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, sizeof(::prism::PrismSwitchAddReq)},
        {13, -1, sizeof(::prism::PrismSwitchChangeOwnerReq)},
        {24, -1, sizeof(::prism::PrismSwitchDeleteReq)},
        {31, -1, sizeof(::prism::PrismSwitchLockReq)},
        {38, -1, sizeof(::prism::PrismSwitchReply)},
};

static ::google::protobuf::Message const *const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_PrismSwitchAddReq_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_PrismSwitchChangeOwnerReq_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_PrismSwitchDeleteReq_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_PrismSwitchLockReq_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message *>(
        &::prism::_PrismSwitchReply_default_instance_),
};

void
protobuf_AssignDescriptors()
{
  AddDescriptors();
  AssignDescriptors("prism_switch.proto", schemas, file_default_instances,
                    TableStruct::offsets, file_level_metadata, NULL, NULL);
}

void
protobuf_AssignDescriptorsOnce()
{
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void
protobuf_RegisterTypes(const ::std::string &) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void
protobuf_RegisterTypes(const ::std::string &)
{
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void
AddDescriptorsImpl()
{
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(
      protodesc_cold) = {
      "\n\022prism_switch.proto\022\005prism\"\256\001\n\021PrismSwi"
      "tchAddReq\022\021\n\tpeer_addr\030\001 \001(\r\022\021\n\tpeer_por"
      "t\030\002 \001(\r\022\024\n\014virtual_addr\030\003 "
      "\001(\r\022\024\n\014virtual"
      "_port\030\004 \001(\r\022\022\n\nowner_addr\030\005 "
      "\001(\r\022\022\n\nowner"
      "_port\030\006 \001(\r\022\021\n\towner_mac\030\007 "
      "\001(\004\022\014\n\004lock\030\010"
      " \001(\010\"\214\001\n\031PrismSwitchChangeOwnerReq\022\021\n\tpe"
      "er_addr\030\001 \001(\r\022\021\n\tpeer_port\030\002 "
      "\001(\r\022\022\n\nowne"
      "r_addr\030\003 \001(\r\022\022\n\nowner_port\030\004 "
      "\001(\r\022\021\n\towne"
      "r_mac\030\005 \001(\004\022\016\n\006unlock\030\006 "
      "\001(\010\"<\n\024PrismSwit"
      "chDeleteReq\022\021\n\tpeer_addr\030\001 \001(\r\022\021\n\tpeer_p"
      "ort\030\002 \001(\r\":\n\022PrismSwitchLockReq\022\021\n\tpeer_"
      "addr\030\001 \001(\r\022\021\n\tpeer_port\030\002 "
      "\001(\r\"!\n\020PrismSw"
      "itchReply\022\r\n\005error\030\001 \001(\0212\325\002\n\013PrismSwitch"
      "\022:\n\003Add\022\030.prism.PrismSwitchAddReq\032\027.pris"
      "m.PrismSwitchReply\"\000\022J\n\013ChangeOwner\022 .pr"
      "ism.PrismSwitchChangeOwnerReq\032\027.prism.Pr"
      "ismSwitchReply\"\000\022@\n\006Delete\022\033.prism.Prism"
      "SwitchDeleteReq\032\027.prism.PrismSwitchReply"
      "\"\000\022<\n\004Lock\022\031.prism.PrismSwitchLockReq\032\027."
      "prism.PrismSwitchReply\"\000\022>\n\006Unlock\022\031.pri"
      "sm.PrismSwitchLockReq\032\027.prism.PrismSwitc"
      "hReply\"\000b\006proto3"};
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 856);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
      "prism_switch.proto", &protobuf_RegisterTypes);
}

void
AddDescriptors()
{
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;
} // namespace protobuf_prism_5fswitch_2eproto
namespace prism {

// ===================================================================

void
PrismSwitchAddReq::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrismSwitchAddReq::kPeerAddrFieldNumber;
const int PrismSwitchAddReq::kPeerPortFieldNumber;
const int PrismSwitchAddReq::kVirtualAddrFieldNumber;
const int PrismSwitchAddReq::kVirtualPortFieldNumber;
const int PrismSwitchAddReq::kOwnerAddrFieldNumber;
const int PrismSwitchAddReq::kOwnerPortFieldNumber;
const int PrismSwitchAddReq::kOwnerMacFieldNumber;
const int PrismSwitchAddReq::kLockFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PrismSwitchAddReq::PrismSwitchAddReq()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchAddReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.PrismSwitchAddReq)
}
PrismSwitchAddReq::PrismSwitchAddReq(const PrismSwitchAddReq &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&peer_addr_, &from.peer_addr_,
           static_cast<size_t>(reinterpret_cast<char *>(&lock_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(lock_));
  // @@protoc_insertion_point(copy_constructor:prism.PrismSwitchAddReq)
}

void
PrismSwitchAddReq::SharedCtor()
{
  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&lock_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(lock_));
}

PrismSwitchAddReq::~PrismSwitchAddReq()
{
  // @@protoc_insertion_point(destructor:prism.PrismSwitchAddReq)
  SharedDtor();
}

void
PrismSwitchAddReq::SharedDtor()
{
}

void
PrismSwitchAddReq::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
PrismSwitchAddReq::descriptor()
{
  ::protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const PrismSwitchAddReq &
PrismSwitchAddReq::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchAddReq.base);
  return *internal_default_instance();
}

void
PrismSwitchAddReq::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.PrismSwitchAddReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&lock_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(lock_));
  _internal_metadata_.Clear();
}

bool
PrismSwitchAddReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.PrismSwitchAddReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // uint32 peer_addr = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 peer_port = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 virtual_addr = 3;
    case 3: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &virtual_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 virtual_port = 4;
    case 4: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &virtual_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 owner_addr = 5;
    case 5: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &owner_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 owner_port = 6;
    case 6: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &owner_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 owner_mac = 7;
    case 7: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &owner_mac_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // bool lock = 8;
    case 8: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
            input, &lock_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.PrismSwitchAddReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.PrismSwitchAddReq)
  return false;
#undef DO_
}

void
PrismSwitchAddReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.PrismSwitchAddReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        1, this->peer_addr(), output);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        2, this->peer_port(), output);
  }

  // uint32 virtual_addr = 3;
  if (this->virtual_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        3, this->virtual_addr(), output);
  }

  // uint32 virtual_port = 4;
  if (this->virtual_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        4, this->virtual_port(), output);
  }

  // uint32 owner_addr = 5;
  if (this->owner_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        5, this->owner_addr(), output);
  }

  // uint32 owner_port = 6;
  if (this->owner_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        6, this->owner_port(), output);
  }

  // uint64 owner_mac = 7;
  if (this->owner_mac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        7, this->owner_mac(), output);
  }

  // bool lock = 8;
  if (this->lock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->lock(),
                                                            output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.PrismSwitchAddReq)
}

::google::protobuf::uint8 *
PrismSwitchAddReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.PrismSwitchAddReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->peer_addr(), target);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        2, this->peer_port(), target);
  }

  // uint32 virtual_addr = 3;
  if (this->virtual_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        3, this->virtual_addr(), target);
  }

  // uint32 virtual_port = 4;
  if (this->virtual_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        4, this->virtual_port(), target);
  }

  // uint32 owner_addr = 5;
  if (this->owner_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        5, this->owner_addr(), target);
  }

  // uint32 owner_port = 6;
  if (this->owner_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        6, this->owner_port(), target);
  }

  // uint64 owner_mac = 7;
  if (this->owner_mac() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        7, this->owner_mac(), target);
  }

  // bool lock = 8;
  if (this->lock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(
        8, this->lock(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.PrismSwitchAddReq)
  return target;
}

size_t
PrismSwitchAddReq::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.PrismSwitchAddReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_addr());
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_port());
  }

  // uint32 virtual_addr = 3;
  if (this->virtual_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->virtual_addr());
  }

  // uint32 virtual_port = 4;
  if (this->virtual_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->virtual_port());
  }

  // uint32 owner_addr = 5;
  if (this->owner_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->owner_addr());
  }

  // uint32 owner_port = 6;
  if (this->owner_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->owner_port());
  }

  // uint64 owner_mac = 7;
  if (this->owner_mac() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->owner_mac());
  }

  // bool lock = 8;
  if (this->lock() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
PrismSwitchAddReq::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.PrismSwitchAddReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PrismSwitchAddReq *source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const PrismSwitchAddReq>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.PrismSwitchAddReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.PrismSwitchAddReq)
    MergeFrom(*source);
  }
}

void
PrismSwitchAddReq::MergeFrom(const PrismSwitchAddReq &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.PrismSwitchAddReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.peer_addr() != 0) {
    set_peer_addr(from.peer_addr());
  }
  if (from.peer_port() != 0) {
    set_peer_port(from.peer_port());
  }
  if (from.virtual_addr() != 0) {
    set_virtual_addr(from.virtual_addr());
  }
  if (from.virtual_port() != 0) {
    set_virtual_port(from.virtual_port());
  }
  if (from.owner_addr() != 0) {
    set_owner_addr(from.owner_addr());
  }
  if (from.owner_port() != 0) {
    set_owner_port(from.owner_port());
  }
  if (from.owner_mac() != 0) {
    set_owner_mac(from.owner_mac());
  }
  if (from.lock() != 0) {
    set_lock(from.lock());
  }
}

void
PrismSwitchAddReq::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.PrismSwitchAddReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
PrismSwitchAddReq::CopyFrom(const PrismSwitchAddReq &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.PrismSwitchAddReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
PrismSwitchAddReq::IsInitialized() const
{
  return true;
}

void
PrismSwitchAddReq::Swap(PrismSwitchAddReq *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
PrismSwitchAddReq::InternalSwap(PrismSwitchAddReq *other)
{
  using std::swap;
  swap(peer_addr_, other->peer_addr_);
  swap(peer_port_, other->peer_port_);
  swap(virtual_addr_, other->virtual_addr_);
  swap(virtual_port_, other->virtual_port_);
  swap(owner_addr_, other->owner_addr_);
  swap(owner_port_, other->owner_port_);
  swap(owner_mac_, other->owner_mac_);
  swap(lock_, other->lock_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
PrismSwitchAddReq::GetMetadata() const
{
  protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void
PrismSwitchChangeOwnerReq::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrismSwitchChangeOwnerReq::kPeerAddrFieldNumber;
const int PrismSwitchChangeOwnerReq::kPeerPortFieldNumber;
const int PrismSwitchChangeOwnerReq::kOwnerAddrFieldNumber;
const int PrismSwitchChangeOwnerReq::kOwnerPortFieldNumber;
const int PrismSwitchChangeOwnerReq::kOwnerMacFieldNumber;
const int PrismSwitchChangeOwnerReq::kUnlockFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PrismSwitchChangeOwnerReq::PrismSwitchChangeOwnerReq()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchChangeOwnerReq
           .base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.PrismSwitchChangeOwnerReq)
}
PrismSwitchChangeOwnerReq::PrismSwitchChangeOwnerReq(
    const PrismSwitchChangeOwnerReq &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&peer_addr_, &from.peer_addr_,
           static_cast<size_t>(reinterpret_cast<char *>(&unlock_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(unlock_));
  // @@protoc_insertion_point(copy_constructor:prism.PrismSwitchChangeOwnerReq)
}

void
PrismSwitchChangeOwnerReq::SharedCtor()
{
  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&unlock_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(unlock_));
}

PrismSwitchChangeOwnerReq::~PrismSwitchChangeOwnerReq()
{
  // @@protoc_insertion_point(destructor:prism.PrismSwitchChangeOwnerReq)
  SharedDtor();
}

void
PrismSwitchChangeOwnerReq::SharedDtor()
{
}

void
PrismSwitchChangeOwnerReq::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
PrismSwitchChangeOwnerReq::descriptor()
{
  ::protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const PrismSwitchChangeOwnerReq &
PrismSwitchChangeOwnerReq::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchChangeOwnerReq
           .base);
  return *internal_default_instance();
}

void
PrismSwitchChangeOwnerReq::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.PrismSwitchChangeOwnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&unlock_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(unlock_));
  _internal_metadata_.Clear();
}

bool
PrismSwitchChangeOwnerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.PrismSwitchChangeOwnerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // uint32 peer_addr = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 peer_port = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 owner_addr = 3;
    case 3: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &owner_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 owner_port = 4;
    case 4: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &owner_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint64 owner_mac = 5;
    case 5: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint64,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
            input, &owner_mac_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // bool unlock = 6;
    case 6: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
            input, &unlock_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.PrismSwitchChangeOwnerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.PrismSwitchChangeOwnerReq)
  return false;
#undef DO_
}

void
PrismSwitchChangeOwnerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.PrismSwitchChangeOwnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        1, this->peer_addr(), output);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        2, this->peer_port(), output);
  }

  // uint32 owner_addr = 3;
  if (this->owner_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        3, this->owner_addr(), output);
  }

  // uint32 owner_port = 4;
  if (this->owner_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        4, this->owner_port(), output);
  }

  // uint64 owner_mac = 5;
  if (this->owner_mac() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
        5, this->owner_mac(), output);
  }

  // bool unlock = 6;
  if (this->unlock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->unlock(),
                                                            output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.PrismSwitchChangeOwnerReq)
}

::google::protobuf::uint8 *
PrismSwitchChangeOwnerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.PrismSwitchChangeOwnerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->peer_addr(), target);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        2, this->peer_port(), target);
  }

  // uint32 owner_addr = 3;
  if (this->owner_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        3, this->owner_addr(), target);
  }

  // uint32 owner_port = 4;
  if (this->owner_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        4, this->owner_port(), target);
  }

  // uint64 owner_mac = 5;
  if (this->owner_mac() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(
        5, this->owner_mac(), target);
  }

  // bool unlock = 6;
  if (this->unlock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(
        6, this->unlock(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.PrismSwitchChangeOwnerReq)
  return target;
}

size_t
PrismSwitchChangeOwnerReq::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.PrismSwitchChangeOwnerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_addr());
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_port());
  }

  // uint32 owner_addr = 3;
  if (this->owner_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->owner_addr());
  }

  // uint32 owner_port = 4;
  if (this->owner_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->owner_port());
  }

  // uint64 owner_mac = 5;
  if (this->owner_mac() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(
                          this->owner_mac());
  }

  // bool unlock = 6;
  if (this->unlock() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
PrismSwitchChangeOwnerReq::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.PrismSwitchChangeOwnerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PrismSwitchChangeOwnerReq *source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const PrismSwitchChangeOwnerReq>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.PrismSwitchChangeOwnerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.PrismSwitchChangeOwnerReq)
    MergeFrom(*source);
  }
}

void
PrismSwitchChangeOwnerReq::MergeFrom(const PrismSwitchChangeOwnerReq &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.PrismSwitchChangeOwnerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.peer_addr() != 0) {
    set_peer_addr(from.peer_addr());
  }
  if (from.peer_port() != 0) {
    set_peer_port(from.peer_port());
  }
  if (from.owner_addr() != 0) {
    set_owner_addr(from.owner_addr());
  }
  if (from.owner_port() != 0) {
    set_owner_port(from.owner_port());
  }
  if (from.owner_mac() != 0) {
    set_owner_mac(from.owner_mac());
  }
  if (from.unlock() != 0) {
    set_unlock(from.unlock());
  }
}

void
PrismSwitchChangeOwnerReq::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.PrismSwitchChangeOwnerReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
PrismSwitchChangeOwnerReq::CopyFrom(const PrismSwitchChangeOwnerReq &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.PrismSwitchChangeOwnerReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
PrismSwitchChangeOwnerReq::IsInitialized() const
{
  return true;
}

void
PrismSwitchChangeOwnerReq::Swap(PrismSwitchChangeOwnerReq *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
PrismSwitchChangeOwnerReq::InternalSwap(PrismSwitchChangeOwnerReq *other)
{
  using std::swap;
  swap(peer_addr_, other->peer_addr_);
  swap(peer_port_, other->peer_port_);
  swap(owner_addr_, other->owner_addr_);
  swap(owner_port_, other->owner_port_);
  swap(owner_mac_, other->owner_mac_);
  swap(unlock_, other->unlock_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
PrismSwitchChangeOwnerReq::GetMetadata() const
{
  protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void
PrismSwitchDeleteReq::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrismSwitchDeleteReq::kPeerAddrFieldNumber;
const int PrismSwitchDeleteReq::kPeerPortFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PrismSwitchDeleteReq::PrismSwitchDeleteReq()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchDeleteReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.PrismSwitchDeleteReq)
}
PrismSwitchDeleteReq::PrismSwitchDeleteReq(const PrismSwitchDeleteReq &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&peer_addr_, &from.peer_addr_,
           static_cast<size_t>(reinterpret_cast<char *>(&peer_port_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(peer_port_));
  // @@protoc_insertion_point(copy_constructor:prism.PrismSwitchDeleteReq)
}

void
PrismSwitchDeleteReq::SharedCtor()
{
  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&peer_port_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(peer_port_));
}

PrismSwitchDeleteReq::~PrismSwitchDeleteReq()
{
  // @@protoc_insertion_point(destructor:prism.PrismSwitchDeleteReq)
  SharedDtor();
}

void
PrismSwitchDeleteReq::SharedDtor()
{
}

void
PrismSwitchDeleteReq::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
PrismSwitchDeleteReq::descriptor()
{
  ::protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const PrismSwitchDeleteReq &
PrismSwitchDeleteReq::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchDeleteReq.base);
  return *internal_default_instance();
}

void
PrismSwitchDeleteReq::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.PrismSwitchDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&peer_port_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(peer_port_));
  _internal_metadata_.Clear();
}

bool
PrismSwitchDeleteReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.PrismSwitchDeleteReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // uint32 peer_addr = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 peer_port = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.PrismSwitchDeleteReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.PrismSwitchDeleteReq)
  return false;
#undef DO_
}

void
PrismSwitchDeleteReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.PrismSwitchDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        1, this->peer_addr(), output);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        2, this->peer_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.PrismSwitchDeleteReq)
}

::google::protobuf::uint8 *
PrismSwitchDeleteReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.PrismSwitchDeleteReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->peer_addr(), target);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        2, this->peer_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.PrismSwitchDeleteReq)
  return target;
}

size_t
PrismSwitchDeleteReq::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.PrismSwitchDeleteReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_addr());
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
PrismSwitchDeleteReq::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.PrismSwitchDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PrismSwitchDeleteReq *source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const PrismSwitchDeleteReq>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.PrismSwitchDeleteReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.PrismSwitchDeleteReq)
    MergeFrom(*source);
  }
}

void
PrismSwitchDeleteReq::MergeFrom(const PrismSwitchDeleteReq &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.PrismSwitchDeleteReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.peer_addr() != 0) {
    set_peer_addr(from.peer_addr());
  }
  if (from.peer_port() != 0) {
    set_peer_port(from.peer_port());
  }
}

void
PrismSwitchDeleteReq::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.PrismSwitchDeleteReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
PrismSwitchDeleteReq::CopyFrom(const PrismSwitchDeleteReq &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.PrismSwitchDeleteReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
PrismSwitchDeleteReq::IsInitialized() const
{
  return true;
}

void
PrismSwitchDeleteReq::Swap(PrismSwitchDeleteReq *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
PrismSwitchDeleteReq::InternalSwap(PrismSwitchDeleteReq *other)
{
  using std::swap;
  swap(peer_addr_, other->peer_addr_);
  swap(peer_port_, other->peer_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
PrismSwitchDeleteReq::GetMetadata() const
{
  protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void
PrismSwitchLockReq::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrismSwitchLockReq::kPeerAddrFieldNumber;
const int PrismSwitchLockReq::kPeerPortFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PrismSwitchLockReq::PrismSwitchLockReq()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchLockReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.PrismSwitchLockReq)
}
PrismSwitchLockReq::PrismSwitchLockReq(const PrismSwitchLockReq &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&peer_addr_, &from.peer_addr_,
           static_cast<size_t>(reinterpret_cast<char *>(&peer_port_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(peer_port_));
  // @@protoc_insertion_point(copy_constructor:prism.PrismSwitchLockReq)
}

void
PrismSwitchLockReq::SharedCtor()
{
  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&peer_port_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(peer_port_));
}

PrismSwitchLockReq::~PrismSwitchLockReq()
{
  // @@protoc_insertion_point(destructor:prism.PrismSwitchLockReq)
  SharedDtor();
}

void
PrismSwitchLockReq::SharedDtor()
{
}

void
PrismSwitchLockReq::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
PrismSwitchLockReq::descriptor()
{
  ::protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const PrismSwitchLockReq &
PrismSwitchLockReq::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchLockReq.base);
  return *internal_default_instance();
}

void
PrismSwitchLockReq::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.PrismSwitchLockReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::memset(&peer_addr_, 0,
           static_cast<size_t>(reinterpret_cast<char *>(&peer_port_) -
                               reinterpret_cast<char *>(&peer_addr_)) +
               sizeof(peer_port_));
  _internal_metadata_.Clear();
}

bool
PrismSwitchLockReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.PrismSwitchLockReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // uint32 peer_addr = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_addr_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    // uint32 peer_port = 2;
    case 2: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::uint32,
             ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
            input, &peer_port_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.PrismSwitchLockReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.PrismSwitchLockReq)
  return false;
#undef DO_
}

void
PrismSwitchLockReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.PrismSwitchLockReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        1, this->peer_addr(), output);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
        2, this->peer_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.PrismSwitchLockReq)
}

::google::protobuf::uint8 *
PrismSwitchLockReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.PrismSwitchLockReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        1, this->peer_addr(), target);
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(
        2, this->peer_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.PrismSwitchLockReq)
  return target;
}

size_t
PrismSwitchLockReq::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.PrismSwitchLockReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // uint32 peer_addr = 1;
  if (this->peer_addr() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_addr());
  }

  // uint32 peer_port = 2;
  if (this->peer_port() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(
                          this->peer_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
PrismSwitchLockReq::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.PrismSwitchLockReq)
  GOOGLE_DCHECK_NE(&from, this);
  const PrismSwitchLockReq *source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const PrismSwitchLockReq>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.PrismSwitchLockReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.PrismSwitchLockReq)
    MergeFrom(*source);
  }
}

void
PrismSwitchLockReq::MergeFrom(const PrismSwitchLockReq &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.PrismSwitchLockReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.peer_addr() != 0) {
    set_peer_addr(from.peer_addr());
  }
  if (from.peer_port() != 0) {
    set_peer_port(from.peer_port());
  }
}

void
PrismSwitchLockReq::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.PrismSwitchLockReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
PrismSwitchLockReq::CopyFrom(const PrismSwitchLockReq &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.PrismSwitchLockReq)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
PrismSwitchLockReq::IsInitialized() const
{
  return true;
}

void
PrismSwitchLockReq::Swap(PrismSwitchLockReq *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
PrismSwitchLockReq::InternalSwap(PrismSwitchLockReq *other)
{
  using std::swap;
  swap(peer_addr_, other->peer_addr_);
  swap(peer_port_, other->peer_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
PrismSwitchLockReq::GetMetadata() const
{
  protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// ===================================================================

void
PrismSwitchReply::InitAsDefaultInstance()
{
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrismSwitchReply::kErrorFieldNumber;
#endif // !defined(_MSC_VER) || _MSC_VER >= 1900

PrismSwitchReply::PrismSwitchReply()
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchReply.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:prism.PrismSwitchReply)
}
PrismSwitchReply::PrismSwitchReply(const PrismSwitchReply &from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL)
{
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_ = from.error_;
  // @@protoc_insertion_point(copy_constructor:prism.PrismSwitchReply)
}

void
PrismSwitchReply::SharedCtor()
{
  error_ = 0;
}

PrismSwitchReply::~PrismSwitchReply()
{
  // @@protoc_insertion_point(destructor:prism.PrismSwitchReply)
  SharedDtor();
}

void
PrismSwitchReply::SharedDtor()
{
}

void
PrismSwitchReply::SetCachedSize(int size) const
{
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor *
PrismSwitchReply::descriptor()
{
  ::protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages]
          .descriptor;
}

const PrismSwitchReply &
PrismSwitchReply::default_instance()
{
  ::google::protobuf::internal::InitSCC(
      &protobuf_prism_5fswitch_2eproto::scc_info_PrismSwitchReply.base);
  return *internal_default_instance();
}

void
PrismSwitchReply::Clear()
{
  // @@protoc_insertion_point(message_clear_start:prism.PrismSwitchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  error_ = 0;
  _internal_metadata_.Clear();
}

bool
PrismSwitchReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream *input)
{
#define DO_(EXPRESSION)                                                        \
  if (!GOOGLE_PREDICT_TRUE(EXPRESSION))                                        \
  goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:prism.PrismSwitchReply)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p =
        input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second)
      goto handle_unusual;
    switch (
        ::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
    // sint32 error = 1;
    case 1: {
      if (static_cast<::google::protobuf::uint8>(tag) ==
          static_cast<::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

        DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
             ::google::protobuf::int32,
             ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
            input, &error_)));
      } else {
        goto handle_unusual;
      }
      break;
    }

    default: {
    handle_unusual:
      if (tag == 0) {
        goto success;
      }
      DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
      break;
    }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:prism.PrismSwitchReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:prism.PrismSwitchReply)
  return false;
#undef DO_
}

void
PrismSwitchReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream *output) const
{
  // @@protoc_insertion_point(serialize_start:prism.PrismSwitchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // sint32 error = 1;
  if (this->error() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->error(),
                                                              output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
             ? _internal_metadata_.unknown_fields()
             : _internal_metadata_.default_instance()),
        output);
  }
  // @@protoc_insertion_point(serialize_end:prism.PrismSwitchReply)
}

::google::protobuf::uint8 *
PrismSwitchReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8 *target) const
{
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:prism.PrismSwitchReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  // sint32 error = 1;
  if (this->error() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(
        1, this->error(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target =
        ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:prism.PrismSwitchReply)
  return target;
}

size_t
PrismSwitchReply::ByteSizeLong() const
{
  // @@protoc_insertion_point(message_byte_size_start:prism.PrismSwitchReply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&
       ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
        ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
  }
  // sint32 error = 1;
  if (this->error() != 0) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt32Size(
                          this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void
PrismSwitchReply::MergeFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_merge_from_start:prism.PrismSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  const PrismSwitchReply *source =
      ::google::protobuf::internal::DynamicCastToGenerated<
          const PrismSwitchReply>(&from);
  if (source == NULL) {
    // @@protoc_insertion_point(generalized_merge_from_cast_fail:prism.PrismSwitchReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    // @@protoc_insertion_point(generalized_merge_from_cast_success:prism.PrismSwitchReply)
    MergeFrom(*source);
  }
}

void
PrismSwitchReply::MergeFrom(const PrismSwitchReply &from)
{
  // @@protoc_insertion_point(class_specific_merge_from_start:prism.PrismSwitchReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void)cached_has_bits;

  if (from.error() != 0) {
    set_error(from.error());
  }
}

void
PrismSwitchReply::CopyFrom(const ::google::protobuf::Message &from)
{
  // @@protoc_insertion_point(generalized_copy_from_start:prism.PrismSwitchReply)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

void
PrismSwitchReply::CopyFrom(const PrismSwitchReply &from)
{
  // @@protoc_insertion_point(class_specific_copy_from_start:prism.PrismSwitchReply)
  if (&from == this)
    return;
  Clear();
  MergeFrom(from);
}

bool
PrismSwitchReply::IsInitialized() const
{
  return true;
}

void
PrismSwitchReply::Swap(PrismSwitchReply *other)
{
  if (other == this)
    return;
  InternalSwap(other);
}
void
PrismSwitchReply::InternalSwap(PrismSwitchReply *other)
{
  using std::swap;
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata
PrismSwitchReply::GetMetadata() const
{
  protobuf_prism_5fswitch_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_prism_5fswitch_2eproto::file_level_metadata
      [kIndexInFileMessages];
}

// @@protoc_insertion_point(namespace_scope)
} // namespace prism
namespace google {
namespace protobuf {
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::PrismSwitchAddReq *
Arena::CreateMaybeMessage<::prism::PrismSwitchAddReq>(Arena *arena)
{
  return Arena::CreateInternal<::prism::PrismSwitchAddReq>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::PrismSwitchChangeOwnerReq *
Arena::CreateMaybeMessage<::prism::PrismSwitchChangeOwnerReq>(Arena *arena)
{
  return Arena::CreateInternal<::prism::PrismSwitchChangeOwnerReq>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::PrismSwitchDeleteReq *
Arena::CreateMaybeMessage<::prism::PrismSwitchDeleteReq>(Arena *arena)
{
  return Arena::CreateInternal<::prism::PrismSwitchDeleteReq>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::PrismSwitchLockReq *
Arena::CreateMaybeMessage<::prism::PrismSwitchLockReq>(Arena *arena)
{
  return Arena::CreateInternal<::prism::PrismSwitchLockReq>(arena);
}
template <>
GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::prism::PrismSwitchReply *
Arena::CreateMaybeMessage<::prism::PrismSwitchReply>(Arena *arena)
{
  return Arena::CreateInternal<::prism::PrismSwitchReply>(arena);
}
} // namespace protobuf
} // namespace google

// @@protoc_insertion_point(global_scope)
