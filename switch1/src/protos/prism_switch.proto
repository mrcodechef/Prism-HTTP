syntax = "proto3";

package prism;

service PrismSwitch {
  rpc Add(PrismSwitchAddReq) returns (PrismSwitchReply) {}
  rpc ChangeOwner(PrismSwitchChangeOwnerReq) returns (PrismSwitchReply) {}
  rpc Delete(PrismSwitchDeleteReq) returns (PrismSwitchReply) {}
  rpc Lock(PrismSwitchLockReq) returns (PrismSwitchReply) {}
  rpc Unlock(PrismSwitchLockReq) returns (PrismSwitchReply) {}
}

message PrismSwitchAddReq {
  uint32 peer_addr = 1;
  uint32 peer_port = 2;
  uint32 virtual_addr = 3;
  uint32 virtual_port = 4;
  uint32 owner_addr = 5;
  uint32 owner_port = 6;
  uint64 owner_mac = 7;
  bool lock = 8;
};

message PrismSwitchChangeOwnerReq {
  uint32 peer_addr = 1;
  uint32 peer_port = 2;
  uint32 owner_addr = 3;
  uint32 owner_port = 4;
  uint64 owner_mac = 5;
  bool unlock = 6;
};

message PrismSwitchDeleteReq {
  uint32 peer_addr = 1;
  uint32 peer_port = 2;
};

message PrismSwitchLockReq {
  uint32 peer_addr = 1;
  uint32 peer_port = 2;
};

message PrismSwitchReply {
  sint32 error = 1;
};
